# yaml-language-server: $schema=https://json.schemastore.org/prometheus.json
#
# The scrape config for probing services via the Blackbox Exporter.
#
# The relabeling allows the actual service scrape endpoint to be configured
# for all or only some services.
# 
# Annotations:
# io.prometheus.probe_enabled=<true|false>
# io.prometheus.probe_disabled=<true|false>
# 
# io.prometheus.dockerswarm-services.should_be_probed=<true|false>
scrape_configs:

  - job_name: 'dockerswarm/services-endpoints/ingress'

    metrics_path: /probe
    params:
      module: [tcp_connect]

    dockerswarm_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 10s
        role: services

    relabel_configs:
      - target_label: module
        replacement: tcp_connect

      # ================================================================================
      # Keep or drop targets with the following rules
      # ================================================================================

      # io.prometheus.dockerswarm-services.should_be_probed=<true|false>
      - source_labels:
        - __meta_dockerswarm_service_label_io_prometheus_dockerswarm_services_should_be_probed
        regex: 'false'
        action: drop

      # io.prometheus.probe_enabled=<true|false>
      - source_labels:
        - __meta_dockerswarm_service_label_io_prometheus_probe_enabled
        regex: 'false'
        action: drop
      # io.prometheus.probe_disabled=<true|false>
      - source_labels:
        - __meta_dockerswarm_service_label_io_prometheus_probe_disabled
        regex: 'true'
        action: drop

      # Keep only services connected to the "public" network
      - source_labels:
        - __meta_dockerswarm_network_name
        regex: 'public'
        action: keep

      # ================================================================================
      # Override prometheus internal labels to configure blackbox
      # ================================================================================

      - source_labels: [__address__]
        target_label: __param_target
      - target_label: __address__
        replacement: tasks.blackbox-exporter.internal:9115
      - source_labels: [__param_target]
        target_label: instance

      # ================================================================================
      # Override prometheus internal labels
      # ================================================================================

      # If service is replicated, set "job_id" label to "<job>/<service_name>/<task_slot>"
      - source_labels:
        - job
        - __meta_dockerswarm_service_endpoint_port_publish_mode
        - __meta_dockerswarm_service_mode
        - __meta_dockerswarm_service_name
        target_label: id
        separator: '/'

      # Drop all labels starting with "io.prometheus."
      - action: labeldrop
        regex: __meta_(dockerswarm_service_label_io_prometheus_.+)

      # ================================================================================
      # Label mapping
      # ================================================================================
      - action: labelmap
        regex: __meta_(dockerswarm_.+)
      
      # ================================================================================
      # Kubernetes compatible relabeling
      # - namespace
      # - deployment
      # - pod
      # ================================================================================
      # Set Kubernetes's Namespace with "com.docker.stack.namespace" label
      - source_labels:
        - __meta_dockerswarm_service_label_com_docker_stack_namespace
        target_label: namespace

      # Set Kubernetes's Deployment with "com.docker.stack.namespace" label
      - source_labels:
        - __meta_dockerswarm_service_name
        target_label: deployment

      # Set Kubernetes' Service Name with Docker Swarm's Service Name
      - source_labels:
        - __meta_dockerswarm_service_name
        target_label: service
