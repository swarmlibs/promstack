# yaml-language-server: $schema=https://json.schemastore.org/prometheus.json
#
# Scrape configuration for Docker Swarm Tasks
# 
# The relabeling allows the actual task scrape endpoint to be configured
# for all or only some tasks.
# 
# Annotations:
# - io.prometheus.enabled=<true|false>
# - io.prometheus.scrape_scheme=<scheme>
# - io.prometheus.scrape_port=<port>
# - io.prometheus.metrics_path=<path>
# - io.prometheus.param_<name>=<value>
# 
# - io.prometheus.dockerswarm-tasks.should_be_scraped=<true|false>
scrape_configs:

  - job_name: promstack/dockerswarm-services

    dockerswarm_sd_configs:
      - host: http://prometheus-service-discovery.internal:9093
        refresh_interval: 10s
        role: tasks
        filters:
          - name: node
            values: [ '{{.Node.ID}}' ]
          - name: desired-state
            values: [ 'running' ]

    relabel_configs:
      # ================================================================================
      # Patching labels
      # ================================================================================

      # Fix "__meta_dockerswarm_task_slot" label for global tasks
      - source_labels:
        - __meta_dockerswarm_service_mode
        - __meta_dockerswarm_node_id
        target_label: __meta_dockerswarm_task_slot
        separator: '/'
        regex: global\/(.*)

      # ================================================================================
      # Keep or drop targets with the following rules
      # ================================================================================

      # io.prometheus.enabled=<true|false>
      - source_labels:
        - __meta_dockerswarm_service_label_io_prometheus_enabled
        regex: 'true'
        action: keep

      # - io.prometheus.dockerswarm-tasks.should_be_scraped=<true|false>
      - source_labels:
        - __meta_dockerswarm_service_label_io_prometheus_dockerswarm_tasks_should_be_scraped
        regex: 'false'
        action: drop

      # Keep only tasks connected to the "prometheus" network
      - source_labels:
        - __meta_dockerswarm_network_name
        regex: (^prometheus$)
        action: keep

      # ================================================================================
      # Override prometheus internal labels
      # ================================================================================

      # io.prometheus.scrape_scheme=<scheme>
      - source_labels:
        - __meta_dockerswarm_service_label_io_prometheus_scrape_scheme
        target_label: __scheme__
        regex: (https?)

      # io.prometheus.scrape_port=<port>
      - source_labels:
        - __meta_dockerswarm_service_label_io_prometheus_scrape_port
        - __address__
        target_label: __meta_dockerswarm_service_label_io_prometheus_scrape_port
        separator: ';'
        regex: (\d+);(?:[^:]+)(?::(\d+))?
        replacement: $1

      # io.prometheus.metrics_path=<path>
      - source_labels:
        - __meta_dockerswarm_service_label_io_prometheus_metrics_path
        - __metrics_path__
        target_label: __meta_dockerswarm_service_label_io_prometheus_metrics_path
        separator: ';'
        regex: ;(.*)
        replacement: $1
      - source_labels:
        - __meta_dockerswarm_service_label_io_prometheus_metrics_path
        target_label: __metrics_path__

      # io.prometheus.param_<name>=<value>
      - regex: __meta_dockerswarm_service_label_io_prometheus_param_(.+)
        action: labelmap
        replacement: __param_$1
      - regex: __meta_dockerswarm_service_label_io_prometheus_label_(.+)
        action: labelmap

      # Override "job" label to Docker Swarm's Service Name combined with "namespace" labels
      # e.g. <com.docker.stack.namespace>/<io.prometheus.job_name>
      - source_labels:
          - __meta_dockerswarm_service_label_io_prometheus_job_name
          - __meta_dockerswarm_service_name
        target_label: __meta_dockerswarm_service_label_io_prometheus_job_name
        separator: ';'
        regex: ;(.*)
        replacement: $1
      - source_labels:
        - __meta_dockerswarm_service_label_com_docker_stack_namespace
        - __meta_dockerswarm_service_label_io_prometheus_job_name
        target_label: job
        separator: /

      # Override "instance" label to "<service_name>.<task_slot>.<task_id>:<scrape_port>"
      - source_labels:
        - __meta_dockerswarm_service_name
        - __meta_dockerswarm_task_slot
        - __meta_dockerswarm_task_id
        target_label: __tmp_instance
        separator: .
      - source_labels:
        - __tmp_instance
        - __meta_dockerswarm_service_label_io_prometheus_scrape_port
        target_label: instance
        separator: ':'
      
      # Override "__address__" label to the new "instance"
      - source_labels:
        - instance
        target_label: __address__

      # Drop all labels starting with "io.prometheus."
      - action: labeldrop
        regex: __meta_(dockerswarm_service_label_io_prometheus_.+)

      # ================================================================================
      # Label mapping
      # ================================================================================

      - action: labelmap
        regex: __meta_(dockerswarm_service_.+)
      - action: labelmap
        regex: __meta_(dockerswarm_task_(?:id|name|slot))

      - action: labelmap
        regex: __meta_dockerswarm_service_label_com_(docker_stack_.+)
      - action: labeldrop
        regex: dockerswarm_service_label_com_(docker_stack_.+)

      # ================================================================================
      # Docker Swarm compatible relabeling
      # - dockerswarm_task_name
      # ================================================================================

      # Set "task" label to "<service_name>_<task_slot>"
      - source_labels:
        - __meta_dockerswarm_service_name
        - __meta_dockerswarm_task_slot
        target_label: task
        separator: '.'

      # Set "dockerswarm_task_name" label to "<service_name>.<task_slot>.<task_id>"
      - source_labels:
        - __meta_dockerswarm_service_name
        - __meta_dockerswarm_task_slot
        - __meta_dockerswarm_task_id
        target_label: dockerswarm_task_name
        separator: '.'

      # ================================================================================
      # Kubernetes compatible relabeling
      # - namespace
      # - deployment
      # - pod
      # ================================================================================

      # Set Kubernetes's Namespace with "com.docker.stack.namespace" label
      - source_labels:
        - __meta_dockerswarm_service_label_com_docker_stack_namespace
        target_label: namespace

      # Set Kubernetes's Deployment with "com.docker.stack.namespace" label
      - source_labels:
        - __meta_dockerswarm_service_name
        target_label: deployment

      # Set Kubernetes's Pod Name with Docker Swarm's Service Name
      - source_labels:
        - dockerswarm_task_name
        target_label: pod
