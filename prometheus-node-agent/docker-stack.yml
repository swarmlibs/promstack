services:
  prometheus-node-agent:
    command:
    - --agent
    - --config.file=/etc/prometheus/prometheus.yml
    - --storage.agent.path=/prometheus
    - --storage.agent.retention.max-time=2h
    - --web.page-title=Prometheus Node Agent - Promstack
    - --log.level=info
    configs:
    - source: prometheus-node-agent-config-tmpl
      target: /etc/prometheus/prometheus.yml
    - source: prometheus-node-agent-cadvisor
      target: /etc/prometheus/scrape-configs/cadvisor.yml
    - source: prometheus-node-agent-docker
      target: /etc/prometheus/scrape-configs/docker.yml
    - source: prometheus-node-agent-dockerswarm-tasks
      target: /etc/prometheus/scrape-configs/dockerswarm-services.yml
    - source: prometheus-node-agent-node-exporter
      target: /etc/prometheus/scrape-configs/node_exporter.yml
    - source: prometheus-node-agent-prometheus
      target: /etc/prometheus/scrape-configs/prometheus.yml
    depends_on:
    - prometheus-server
    deploy:
      mode: global
      labels:
        io.prometheus.dockerswarm-services.should_be_probed: "false"
        io.prometheus.dockerswarm-tasks.should_be_scraped: "false"
        io.prometheus.role: prometheus-node-agent
      update_config:
        parallelism: 1
        delay: 30s
        failure_action: rollback
        monitor: 15s
        max_failure_ratio: 0.2
      rollback_config:
        parallelism: 1
        delay: 30s
        failure_action: rollback
        monitor: 15s
        max_failure_ratio: 0.2
      resources:
        limits:
          memory: "1073741824"
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 15
        window: 15s
    environment:
      DOCKERSWARM_NODE_HOSTNAME: '{{.Node.Hostname}}'
      DOCKERSWARM_NODE_ID: '{{.Node.ID}}'
    extra_hosts:
    - host.docker.internal:host-gateway
    hostname: replica-{{.Task.Slot}}.federated.prometheus.internal
    healthcheck:
      test:
      - CMD-SHELL
      - wget -qO - --tries=1 --spider http://127.0.0.1:9090/-/healthy || exit 1
      timeout: 10s
      interval: 30s
      retries: 3
      start_period: 30s
    image: docker.io/prom/prometheus:v3.0.1
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: 12m
    networks:
      prometheus: null
      prometheus_gwnetwork: null
    ports:
    - mode: host
      target: 9090
      published: 19090
    user: "0:0"
    volumes:
    - type: bind
      source: /var/run/docker.sock
      target: /var/run/docker.sock
      read_only: true
    - type: volume
      source: prometheus-node-agent-data
      target: /prometheus
networks:
  prometheus:
    name: prometheus
    external: true
  prometheus_gwnetwork:
    name: prometheus_gwnetwork
    external: true
volumes:
  prometheus-node-agent-data: {}
configs:
  prometheus-node-agent-cadvisor:
    name: prometheus-node-agent-cadvisor-v1
    file: ./prometheus/scrape-configs/cadvisor.yml
    template_driver: golang
  prometheus-node-agent-config-tmpl:
    name: prometheus-node-agent-config-tmpl-v1
    file: ./prometheus/prometheus.yml.tmpl
    template_driver: golang
  prometheus-node-agent-docker:
    name: prometheus-node-agent-docker-v1
    file: ./prometheus/scrape-configs/docker.yml
    template_driver: golang
  prometheus-node-agent-dockerswarm-tasks:
    name: prometheus-node-agent-dockerswarm-tasks-v1
    file: ./prometheus/scrape-configs/dockerswarm-tasks.yml
    template_driver: golang
  prometheus-node-agent-node-exporter:
    name: prometheus-node-agent-node-exporter-v1
    file: ./prometheus/scrape-configs/node-exporter.yml
    template_driver: golang
  prometheus-node-agent-prometheus:
    name: prometheus-node-agent-prometheus-v1
    file: ./prometheus/scrape-configs/prometheus.yml
    template_driver: golang
x-default-logging:
  driver: json-file
  options:
    max-file: "5"
    max-size: 12m
x-deploy:
  mode: global
  resources:
    limits:
      memory: 1G
x-healthcheck:
  interval: 30s
  retries: 3
  start_period: 30s
  timeout: 10s
