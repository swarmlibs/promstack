# yaml-language-server: $schema=https://raw.githubusercontent.com/swarmlibs/dockerstack-schema/main/schema/dockerstack-spec.json

x-healthcheck: &x-healthcheck
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 30s

x-deploy: &x-deploy
  mode: global
  resources:
    limits:
      memory: 1G

x-default-logging: &x-default-logging
  options:
    max-size: "12m"
    max-file: "5"
  driver: json-file

services:

  # ====================================================
  # Prometheus
  # https://github.com/prometheus/prometheus
  # ====================================================

  prometheus-node-agent:
    image: ${PROMSTACK_PROMETHEUS_VERSION}
    command:
      - --agent
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.agent.path=/prometheus
      - --storage.agent.retention.max-time=2h
      - --web.page-title=Prometheus Node Agent - Promstack
      - --log.level=info
    environment:
      - DOCKERSWARM_NODE_ID={{.Node.ID}}
      - DOCKERSWARM_NODE_HOSTNAME={{.Node.Hostname}}
    user: "0:0"
    ports:
      - published: 19090
        target: 9090
        mode: host
    networks:
      prometheus:
      prometheus_gwnetwork:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    hostname: replica-{{.Task.Slot}}.federated.prometheus.internal
    configs:
      - source: prometheus-node-agent-config-tmpl
        target: /etc/prometheus/prometheus.yml
      - source: prometheus-node-agent-cadvisor
        target: /etc/prometheus/scrape-configs/cadvisor.yml
      - source: prometheus-node-agent-docker
        target: /etc/prometheus/scrape-configs/docker.yml
      - source: prometheus-node-agent-dockerswarm-services
        target: /etc/prometheus/scrape-configs/dockerswarm-services.yml
      - source: prometheus-node-agent-node-exporter
        target: /etc/prometheus/scrape-configs/node_exporter.yml
      - source: prometheus-node-agent-prometheus
        target: /etc/prometheus/scrape-configs/prometheus.yml
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
      - type: volume
        source: prometheus-node-agent-data
        target: /prometheus
    healthcheck:
      <<: *x-healthcheck
      test: wget -qO - --tries=1 --spider http://127.0.0.1:9090/-/healthy || exit 1
    logging: *x-default-logging
    deploy:
      <<: *x-deploy
      labels:
        io.prometheus.role: "prometheus-node-agent"
        io.prometheus.dockerswarm-tasks.should_be_scraped: "false"
        io.prometheus.dockerswarm-services.should_be_probed: "false"
      restart_policy:
        condition: any
        max_attempts: 15
        delay: 30s
        window: 15s
      rollback_config:
        parallelism: 1
        delay: 30s
        failure_action: rollback
        monitor: 15s
        max_failure_ratio: 0.2
      update_config:
        parallelism: 1
        delay: 30s
        failure_action: rollback
        monitor: 15s
        max_failure_ratio: 0.2
    depends_on:
      - prometheus-server

networks:
  prometheus:
    name: prometheus
    external: true
  prometheus_gwnetwork:
    name: prometheus_gwnetwork
    external: true

volumes:
  prometheus-node-agent-data:

configs:
  prometheus-node-agent-config-tmpl:
    name: prometheus-node-agent-config-tmpl-v1
    file: ./prometheus/prometheus.yml.tmpl
    template_driver: golang

  # Prometheus's scrape config files
  prometheus-node-agent-docker:
    name: prometheus-node-agent-docker-v1
    file: ./prometheus/scrape-configs/docker.yml
    template_driver: golang
  prometheus-node-agent-dockerswarm-services:
    name: prometheus-node-agent-dockerswarm-services-v1
    file: ./prometheus/scrape-configs/dockerswarm-services.yml
    template_driver: golang
  prometheus-node-agent-cadvisor:
    name: prometheus-node-agent-cadvisor-v1
    file: ./prometheus/scrape-configs/cadvisor.yml
    template_driver: golang
  prometheus-node-agent-node-exporter:
    name: prometheus-node-agent-node-exporter-v1
    file: ./prometheus/scrape-configs/node-exporter.yml
    template_driver: golang
  prometheus-node-agent-prometheus:
    name: prometheus-node-agent-prometheus-v1
    file: ./prometheus/scrape-configs/prometheus.yml
    template_driver: golang
